name: Publish to Maven Central
on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build-natives:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: Linux
            arch: x86_64
          - os: macos-latest
            platform: Mac
            arch: aarch64
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install CMake (Ubuntu)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y cmake

      - name: Install CMake (macOS)
        if: runner.os == 'macOS'
        run: brew install cmake

      - name: Build Native Library (Linux x86_64)
        if: runner.os == 'Linux' && matrix.arch == 'x86_64'
        run: |
          mkdir -p build
          cd build
          cmake .. \
            -DCMAKE_BUILD_TYPE=Release \
            -DLLAMA_STATIC=ON \
            -DBUILD_SHARED_LIBS=OFF \
            -DLLAMA_BUILD_EXAMPLES=OFF \
            -DLLAMA_BUILD_TESTS=OFF \
            -DLLAMA_METAL=OFF \
            -DLLAMA_NATIVE=OFF
          cmake --build . --config Release --verbose
          mkdir -p ../src/main/resources/io/github/innobridge/llama/client/Linux/x86_64
          cp src/main/resources/io/github/innobridge/llama/client/Linux/x86_64/* ../src/main/resources/io/github/innobridge/llama/client/Linux/x86_64/

      - name: Build Native Library (macOS)
        if: runner.os == 'macOS'
        run: |
          mkdir -p build
          cd build
          cmake .. \
            -DCMAKE_BUILD_TYPE=Release \
            -DLLAMA_STATIC=ON \
            -DBUILD_SHARED_LIBS=OFF \
            -DLLAMA_BUILD_EXAMPLES=OFF \
            -DLLAMA_BUILD_TESTS=OFF \
            -DLLAMA_METAL=ON \
            -DLLAMA_NATIVE=OFF \
            -DCMAKE_OSX_ARCHITECTURES=arm64
          cmake --build . --config Release --verbose
          mkdir -p ../src/main/resources/io/github/innobridge/llama/client/Mac/aarch64
          cp src/main/resources/io/github/innobridge/llama/client/Mac/aarch64/* ../src/main/resources/io/github/innobridge/llama/client/Mac/aarch64/

      - name: Generate Checksums
        run: |
          cd src/main/resources/io/github/innobridge/llama/client
          if [ "$RUNNER_OS" == "Linux" ]; then
            find Linux -type f -name "*.so" -exec sha256sum {} \; > checksums.txt
          else
            find Mac -type f -name "*.dylib" -exec shasum -a 256 {} \; > checksums.txt
          fi
        shell: bash

      - name: Upload Native Library
        uses: actions/upload-artifact@v3
        with:
          name: native-${{ matrix.platform }}-${{ matrix.arch }}
          path: |
            src/main/resources/io/github/innobridge/llama/client/${{ matrix.platform }}/${{ matrix.arch }}
            src/main/resources/io/github/innobridge/llama/client/checksums.txt

  publish:
    needs: build-natives
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'temurin'
          server-id: maven
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Download All Native Libraries
        uses: actions/download-artifact@v3
        with:
          path: native-libs

      - name: Copy Native Libraries
        run: |
          # Create resource directories
          mkdir -p src/main/resources/io/github/innobridge/llama/client/Linux/x86_64
          mkdir -p src/main/resources/io/github/innobridge/llama/client/Mac/aarch64
          
          # Copy Linux libraries
          if [ -d "native-libs/native-Linux-x86_64" ]; then
            cp -r native-libs/native-Linux-x86_64/* src/main/resources/io/github/innobridge/llama/client/Linux/x86_64/
          fi
          
          # Copy Mac libraries
          if [ -d "native-libs/native-Mac-aarch64" ]; then
            cp -r native-libs/native-Mac-aarch64/* src/main/resources/io/github/innobridge/llama/client/Mac/aarch64/
          fi

      - name: Build and Deploy
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: mvn -B clean deploy -Prelease --no-transfer-progress
