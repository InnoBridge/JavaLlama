name: Deploy to Maven Central

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish'
        required: true

jobs:
  build-natives:
    strategy:
      matrix:
        include:
          - platform: Linux
            os: ubuntu-latest
            arch: x86_64
          - platform: Mac
            os: macos-latest
            arch: aarch64
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Install CMake (macOS)
        if: runner.os == 'macOS'
        run: brew install cmake

      - name: Build Native Library (Linux x86_64)
        if: runner.os == 'Linux' && matrix.arch == 'x86_64'
        run: |
          mkdir -p build
          cd build
          cmake .. \
            -DCMAKE_BUILD_TYPE=Release \
            -DLLAMA_STATIC=ON \
            -DLLAMA_BLAS=ON \
            -DLLAMA_BUILD_EXAMPLES=OFF \
            -DLLAMA_BUILD_TESTS=OFF \
            -DLLAMA_METAL=OFF \
            -DLLAMA_NATIVE=OFF
          cmake --build . --config Release --verbose

      - name: Build Native Library (macOS)
        if: runner.os == 'macOS'
        run: |
          mkdir -p build
          cd build
          cmake .. \
            -DCMAKE_BUILD_TYPE=Release \
            -DLLAMA_STATIC=ON \
            -DLLAMA_BLAS=ON \
            -DLLAMA_BUILD_EXAMPLES=OFF \
            -DLLAMA_BUILD_TESTS=OFF \
            -DLLAMA_METAL=ON \
            -DLLAMA_NATIVE=OFF \
            -DCMAKE_OSX_ARCHITECTURES=arm64
          cmake --build . --config Release --verbose

      - name: Generate Checksums
        run: |
          cd src/main/resources/io/github/innobridge/llama/client
          if [ "$RUNNER_OS" == "Linux" ]; then
            find Linux -type f -name "*.so" -exec sha256sum {} \; > checksums.txt
          else
            find Mac -type f -name "*.dylib" -exec shasum -a 256 {} \; > checksums.txt
          fi
        shell: bash

      - name: Upload Native Library
        uses: actions/upload-artifact@v3
        with:
          name: native-${{ matrix.platform }}-${{ matrix.arch }}
          path: |
            src/main/resources/io/github/innobridge/llama/client/${{ matrix.platform }}/${{ matrix.arch }}
            src/main/resources/io/github/innobridge/llama/client/checksums.txt

  publish:
    needs: build-natives
    runs-on: ubuntu-latest
    steps:
      - name: Step 1 - Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Step 2 - Import GPG Key
        run: |
          echo "${{ secrets.GPG_PUBLIC_KEY }}" | gpg --import
          echo "${{ secrets.GPG_SECRET_KEY }}" | gpg --import --no-tty --batch --yes
        env:
          GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
          GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}

      - name: Step 3 - Set up Maven Central Repository
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'temurin'
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_SECRET_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Download All Native Libraries
        uses: actions/download-artifact@v3
        with:
          path: native-libs

      - name: Copy Native Libraries
        run: |
          # Create resource directories
          mkdir -p src/main/resources/io/github/innobridge/llama/client/Linux/x86_64
          mkdir -p src/main/resources/io/github/innobridge/llama/client/Mac/aarch64
          
          # Copy Linux libraries
          if [ -d "native-libs/native-Linux-x86_64" ]; then
            cp -r native-libs/native-Linux-x86_64/* src/main/resources/io/github/innobridge/llama/client/Linux/x86_64/
          fi
          
          # Copy Mac libraries
          if [ -d "native-libs/native-Mac-aarch64" ]; then
            cp -r native-libs/native-Mac-aarch64/* src/main/resources/io/github/innobridge/llama/client/Mac/aarch64/
          fi

      - name: Step 4 - Publish Package to Maven Central
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: mvn clean deploy -P release -DskipTests --batch-mode
