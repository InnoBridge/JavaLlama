<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>io.github.innobridge</groupId>
	<artifactId>llama</artifactId>
	<version>0.0.5-SNAPSHOT-1</version>
  <name>${project.groupId}:${project.artifactId}</name>
	<description>Java bindings for llama.cpp</description>
	<url>https://github.com/innobridge/JavaLlama</url>

    <licenses>
        <license>
            <name>InnoBridge License Version 1.0</name>
            <url>https://github.com/InnoBridge/License/blob/main/InnoBridgeLicense</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>YilengYao</id>
            <name>Yileng Yao</name>
            <email>yilengyao@gmail.com</email>
            <organization>InnoBridgeTechnology</organization>
        </developer>
    </developers>

	<scm>
		<connection>scm:git:git://github.com/innobridge/JavaLlama.git</connection>
		<developerConnection>scm:git:ssh://github.com:innobridge/JavaLlama.git</developerConnection>
		<url>https://github.com/innobridge/JavaLlama/tree/main</url>
	</scm>

    <distributionManagement>
        <repository>
            <id>central</id>
            <name>Maven Central</name>
            <url>https://repo1.maven.org/maven2/</url>
        </repository>
    </distributionManagement>

	<properties>
		<maven.javadoc.skip>true</maven.javadoc.skip>
        <maven.compiler.source>22</maven.compiler.source>
        <maven.compiler.target>22</maven.compiler.target>
        <jna.version>5.13.0</jna.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <native.target.dir>${project.build.directory}/native-lib</native.target.dir>
        <ggml.cuda>true</ggml.cuda>
	</properties>

	<dependencies>
    <dependency>
      <groupId>net.java.dev.jna</groupId>
      <artifactId>jna</artifactId>
      <version>${jna.version}</version>
    </dependency>
    <dependency>
      <groupId>net.java.dev.jna</groupId>
      <artifactId>jna-platform</artifactId>
      <version>${jna.version}</version>
    </dependency>
  	<dependency>
			<groupId>org.jetbrains</groupId>
			<artifactId>annotations</artifactId>
			<version>24.1.0</version>
			<scope>compile</scope>
		</dependency>
 </dependencies>

	<build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <includes>
          <include>**/*</include>
        </includes>
      </resource>
    </resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.13.0</version>
				<configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
					<fork>true</fork>
					<executable>/usr/lib/jvm/jdk-22/bin/javac</executable>
					<compilerVersion>22</compilerVersion>
				</configuration>
				<executions>
					<!-- We have to perform a separate build pass for cuda classifier -->
					<execution>
						<id>gpu</id>
						<phase>compile</phase>
						<goals><goal>compile</goal></goals>
						<configuration>
							<compilerArgs>
								<arg>-h</arg>
								<arg>src/main/cpp</arg>
							</compilerArgs>
							<outputDirectory>${project.build.outputDirectory}_cuda</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

      <!-- Native library compilation -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.1.1</version>
        <executions>
          <execution>
            <id>cmake-generate</id>
            <phase>compile</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <workingDirectory>${native.target.dir}</workingDirectory>
              <executable>cmake</executable>
              <arguments>
                <argument>-DGGML_CUDA=${ggml.cuda}</argument>
                <argument>${project.basedir}</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>cmake-build</id>
            <phase>compile</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <workingDirectory>${native.target.dir}</workingDirectory>
              <executable>cmake</executable>
              <arguments>
                <argument>--build</argument>
                <argument>.</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Copy native libraries to resources -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <id>copy-native-libraries</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.outputDirectory}/io/github/innobridge/llama/client</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/resources/io/github/innobridge/llama/client</directory>
                  <includes>
                    <include>**/*.dll</include>
                    <include>**/*.so</include>
                    <include>**/*.dylib</include>
                    <include>**/*.metal</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
            <plugin>
                <groupId>org.sonatype.central</groupId>
                <artifactId>central-publishing-maven-plugin</artifactId>
                <version>0.5.0</version>
                <extensions>true</extensions>
                <configuration>
                    <publishingServerId>central</publishingServerId>
                    <tokenAuth>true</tokenAuth>
                </configuration>
            </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.6.3</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
      <!-- GPG Signed Components -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>sign-artifacts</id>
						<phase>verify</phase>
						<goals>
							<goal>sign</goal>
						</goals>
						<configuration>
							<gpgArguments>
								<arg>--pinentry-mode</arg>
								<arg>loopback</arg>
							</gpgArguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

  <profiles>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>3.3.0</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>3.6.3</version>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
                <configuration>
                  <gpgArguments>
                    <arg>--pinentry-mode</arg>
                    <arg>loopback</arg>
                  </gpgArguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>cuda</id>
      <properties>
        <ggml.cuda>true</ggml.cuda>
        <gpg.skip>true</gpg.skip>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>3.3.0</version>
            <configuration>
              <classifier>cuda12-linux-x86-64</classifier>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
